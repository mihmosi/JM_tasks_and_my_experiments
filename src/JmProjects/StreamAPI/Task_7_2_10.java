package JmProjects.StreamAPI;
/*Напишите метод, возвращающий стрим псевдослучайных целых чисел.
 Алгоритм генерации чисел следующий:

Берется какое-то начальное неотрицательное число (оно будет передаваться
в ваш метод проверяющей системой).
Первый элемент последовательности устанавливается равным этому числу.
Следующие элементы вычисляются по рекуррентной формуле Rn+1=mid(Rn2),
 где mid — это функция, выделяющая второй, третий и четвертый разряд переданного числа. Например, mid(123456)=345.
Алгоритм, конечно, дурацкий и не выдерживающий никакой критики,
 но для практики работы со стримами сойдет :)

Пример ввода: 13
Пример вывода: 13, 16, 25, 62, 384, 745, 502, 200, 0, ... (дальше бесконечное количество нулей)

Требования:
1. Должен быть метод public static IntStream pseudoRandomStream(int seed)
2. Метод должен возвращать поток, удовлетворяющий условию
*/

import java.util.stream.IntStream;

public class Task_7_2_10 {
    public static IntStream pseudoRandomStream(int seed) {
        return IntStream.iterate(seed, (x) -> (x * x) % 10000 / 10);
//        int x;
//        int y = (x/10)-(x/100)- (x/1000);
    }

    public static void main(String[] args) {
        IntStream res = pseudoRandomStream(13);
        res.limit(10).forEach(x -> System.out.print(x + " "));
//        int x = 62;
//        int y = (x*x)%10000/10;
////        y = 123400 - 100000;
//        System.out.println(y);
    }
//    x%100; =56  x%100000; =23456  x - (x%100) = 123400
}
